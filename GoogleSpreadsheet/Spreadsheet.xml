<?xml version="1.0" encoding="UTF-8"?>
<Module>
    <ModulePrefs title="Rise Google Spreadsheet Gadget">
        <Require feature="rpc" />
        <Optional feature="rise-api">
            <Param name="reports_ready" />
        </Optional>
    </ModulePrefs>
    <UserPref name="url" />
    <UserPref name="docID" />
    <UserPref name="cells" />
    <UserPref name="range" />
    <UserPref name="sheet" />
    <UserPref name="headerRows" />
    <UserPref name="interval" />
    <UserPref name="scrollBy" />
    <UserPref name="scrollDirection" />
    <UserPref name="scrollSpeed" />
    <UserPref name="interactivityTimeout" />
    <UserPref name="spacing" />
    <UserPref name="colPadding" />
    <UserPref name="colCount" />
    <UserPref name="backgroundColor" />
    <UserPref name="rowColor" />
    <UserPref name="alternateRowColor" />
    <UserPref name="duration" />
    <UserPref name="useLayoutURL" />
    <UserPref name="layoutURL" />
    <UserPref name="id" />
    <UserPref name="rsW" />
    <UserPref name="rsH" />
    <UserPref name="heading_font-style" datatype="hidden" />
    <UserPref name="data_font-style" datatype="hidden" />
    <Content type="html" view="editor">
        <![CDATA[
	    <style>
		#settings {
		    display: none;
		}
	    </style>
	    <div id="wrapper">
		<div class="errors"></div>
		<form id="settings" name="settings">
		    <ol>
			<li>
			    <label for="url">
				<a href="#" class="tooltip">Data URL*:<span>Query data source URL of the spreadsheet that holds the data</span></a>
			    </label>
			    <input id="url" name="url" type="text" class="medium" required autofocus />
			    <a id="googleDrive" href="#" data-for="url"><span>Google Drive&#8482;</span></a>
			</li>
			<li class="more drillDown" style="display: none;">
			    <ol>
				<li>
				    <label for="cells">Cells:</label>
				    <div>
					<input type="radio" name="cells" value="sheet" checked="checked" />Entire Sheet<br>
					<input type="radio" name="cells" value="range" />Range
				    </div>
				</li>
				<li id="rangeContainer" style="display: none;">
				    <label for="range">
					<a href="#" class="tooltip">Range:<span>Range of cells in the format A1:B10</span></a>
				    </label>
				    <input id="range" name="range" type="text" />
				</li>
				<li>
				    <label for="sheet">Worksheet:</label>
				    <select id="sheet" name="sheet"></select>
				</li>
				<li>
				    <label for="headerRows">
					<a href="#" class="tooltip">Number of Header Rows:<span>Specify how many rows are header rows. These will be excluded from the data and assigned as column labels in the data table. If set to Auto, the spreadsheet will guess how many rows are header rows. Note that if all your columns are string data, the spreadsheet might have difficulty determining which rows are header rows without this parameter set to something other than Auto.</span></a>
				    </label>
				    <select id="headerRows" name="headerRows">
					<option value="-1">Auto</option>
					<option value="0" selected="selected">0</option>
					<option value="1">1</option>
					<option value="2">2</option>
					<option value="3">3</option>
					<option value="4">4</option>
					<option value="5">5</option>
					<option value="6">6</option>
					<option value="7">7</option>
					<option value="8">8</option>
					<option value="9">9</option>
					<option value="10">10</option>
				    </select>
				</li>
				</ol>
			</li>
			<li>
			    <label for="interval">
				<a href="#" class="tooltip">Data Refresh (seconds):<span>How often to check the spreadsheet for new data</span></a>
			    </label>
			    <input id="interval" name="interval" type="text" class="short" value="10" />
			</li>
			<li>
			    <label for="scrollDirection">
				<a href="#" class="tooltip">Scroll Direction:<span>Direction in which the data should scroll</span></a>
			    </label>
			    <select id="scrollDirection" name="scrollDirection" class="short">
				<option value="none">None</option>
				<option value="up">Up</option>
				<option value="down" selected="selected">Down</option>
				<option value="rtl">Left</option>
				<option value="ltr">Right</option>
			    </select>
			</li>
			<li class="scroll drillDown" style="display: none;">
			    <ol>
				<li>
				    <label for="scrollBy">
					<a href="#" class="tooltip">Scroll By:<span>How to scroll the data if not all of it is visible</span></a>
				    </label>
				    <select id="scrollBy" name="scrollBy" class="short">
					<option value="item">Row</option>
					<option value="page">Page</option>
					<option value="continuous" selected="selected">Continuous</option>
				    </select>
				</li>
				<li class="scrollHold drillDown" style="display: none;">
				    <label for="scrollHold">
					<a href="#" class="tooltip">Scroll Hold (seconds):<span>Number of seconds to pause after each scroll</span></a>
				    </label>
				    <input id="scrollHold" name="scrollHold" type="text" class="short" value="10" />
				</li>
				<li>
				    <label for="scrollSpeed">Scroll Speed:
					<a href="#" class="tooltip"><span>Speed at which scrolling should occur</span></a>
				    </label>
				    <select id="scrollSpeed" name="scrollSpeed" class="short">
					<option value="slowest">Slowest</option>
					<option value="slow">Slow</option>
					<option value="medium" selected="selected">Medium</option>
					<option value="fast">Fast</option>
					<option value="fastest">Fastest</option>
				    </select>
				</li>
				<li>
				    <label for="scrollResumes">
					<a href="#" class="tooltip">Scroll Resumes (seconds):<span>Number of seconds to pause after scrolling is stopped by a touch</span></a>
				    </label>
				    <input id="scrollResumes" name="scrollResumes" type="text" class="short" value="5" />
				</li>
			    </ol>
			</li>
			<li>
			    <label for="rowPadding">
				<a href="#" class="tooltip">Row Padding (pixels):<span>Amount of space between rows</span></a>
			    </label>
			    <input id="rowPadding" name="rowPadding" type="text" class="short" value="25" />
			</li>
			<li>
			    <label for="colPadding">
				<a href="#" class="tooltip">Column Padding (pixels):<span>Amount of space between columns</span></a>
			    </label>
			    <input id="colPadding" name="colPadding" type="text" class="short" value="25" />
			</li>
			<li>
			    <label for="colCount">
				<a href="#" class="tooltip">Number of Columns to Format:<span>Number of columns of the spreadsheet to format</span></a>
			    </label>
			    <select id="colCount" name="colCount" class="short">
				<option value="0" selected="selected">0</option>
				<option value="1">1</option>
				<option value="2">2</option>
				<option value="3">3</option>
				<option value="4">4</option>
				<option value="5">5</option>
				<option value="6">6</option>
				<option value="7">7</option>
				<option value="8">8</option>
				<option value="9">9</option>
				<option value="10">10</option>
			    </select>
			</li>
			<li>
			    <label for="backgroundColor">Background Color:</label>
			    <input id="backgroundColor" name="backgroundColor" type="text" class="short" />
			    <div class="colorPicker" onclick="spreadsheet.showColorPicker('backgroundColor');"></div>
			</li>
			<li class="headingFont" style="display: none;">
			    <label for="heading_font-style">Heading Font:</label>
			    <span id="heading_font-style" name="heading_font-style" data-css=".heading_font-style{font-family:Verdana, Verdana, Geneva, sans-serif;color:rgb(0, 0, 0);font-size:24px;}">Verdana, 24px, color: rgb(0, 0, 0)</span>
			    <div class="fontSelector" onclick="spreadsheet.showFontSelector('heading_font-style');"></div>
			</li>
			<li>
			    <label for="data_font-style">Data Font:</label>
			    <span id="data_font-style" name="data_font-style" data-css=".data_font-style{font-family:Verdana, Verdana, Geneva, sans-serif;color:rgb(0, 0, 0);font-size:16px;}">Verdana, 16px, color: rgb(0, 0, 0)</span>
			    <div class="fontSelector" onclick="spreadsheet.showFontSelector('data_font-style');"></div>
			</li>
			<li>
			    <label for="rowColor">Row Color:</label>
			    <input id="rowColor" name="rowColor" type="text" class="short" />
			    <div class="colorPicker" onclick="spreadsheet.showColorPicker('rowColor');"></div>
			</li>
			<li>
			    <label for="alternateRowColor">Alternate Row Color:</label>
			    <input id="alternateRowColor" name="alternateRowColor" type="text" class="short" />
			    <div class="colorPicker" onclick="spreadsheet.showColorPicker('alternateRowColor');"></div>
			</li>
			<li class="useDefaultURL" style="display: none;">
			    <label for="useDefaultURL">
				<a href="#" class="tooltip">Use Default Layout:<span>Whether to use a default or a custom layout</span></a>
			    </label>
			    <input id="useDefaultURL" name="useDefaultURL" type="checkbox" checked="checked" />
			</li>
			<li class="layoutURL drillDown" style="display: none;">
			    <label for="layoutURL">Layout URL:</label>
			    <input id="layoutURL" name="layoutURL" type="text" class="long" />
			</li>
		    </ol>
		</form>
	    </div>

	    <link rel="stylesheet" href="//s3.amazonaws.com/Common-Production/Settings/css/Settings.css" />


	    <script type="text/javascript" src="//apis.google.com/js/client.js"></script>
	    <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js"></script>

	    <script type="text/javascript" src="//s3.amazonaws.com/Common-Production/Common/RiseVision.Common.min.js"></script>
	    <script type="text/javascript" src="//s3.amazonaws.com/Gadget-Spreadsheet/Spreadsheet.min.js"></script>

            <script type="text/javascript">
                var prefs = new gadgets.Prefs(),
  spreadsheet = null,
  apiLoaded = false;

function onApiLoad() {
  console.log("api loaded");
  apiLoaded = true;
}

function init() {
console.log("init", apiLoaded);
  if ( apiLoaded ) {
    gapi.load('picker', onPickerLoad);
  } else {
    setTimeout(function() {
      init();
    }, 500);
  }

}

function onPickerLoad() {
console.log("onPickerLoad");
  $(function() {
    spreadsheet = new RiseVision.Spreadsheet();

    gadgets.rpc.register("rscmd_getSettings", spreadsheet.getSettings);
    gadgets.rpc.register("rscmd_googlePickerCallback", spreadsheet.setURL);
    gadgets.rpc.register("rscmd_colorPickerCallback", spreadsheet.setColor);
    gadgets.rpc.register("rscmd_fontSelectorCallback", spreadsheet.setFont);

    console.log("init settings!");
    spreadsheet.initSettings();
  });
}

gadgets.util.registerOnLoadHandler(init);
            </script>
            <script type="text/javascript" src="//apis.google.com/js/api.js?onload=onApiLoad></script>


	]]>
    </Content>
    <Content type="html">
        <![CDATA[
	    <style type="text/css">
		#container {
		    width: 100%;
		    height: 100%;
		}

		.arrow {
		    vertical-align: top;
		}

		.even {
		    background-color: __UP_rowColor__;
		}

		.odd {
		    background-color: __UP_alternateRowColor__;
		}

		.tableMenuWrapper .tableMenu {
		    background-color: __UP_backgroundColor__ !important;
		}

		__UP_heading_font-style__
                __UP_data_font-style__
    	    </style>

            <div id="container">
		<table class="page"></table>
            </div>

	    <div class="data_font-style" style="visibility: hidden; position:absolute;">Trigger custom font download</div>

	    <script type="text/javascript" src="//apis.google.com/js/client.js"></script>
	    <script type="text/javascript" src="//www.google.com/jsapi"></script>
	    <!-- Don't upgrade jQuery as jquery.dataTables library uses a jQuery function that is now deprecated. -->
	    <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js"></script>

	    <script type="text/javascript" src="//s3.amazonaws.com/Common-Production/InfiniteScroll/InfiniteScroll.min.js"></script>
	    <script type="text/javascript" src="//s3.amazonaws.com/Common-Production/Common/RiseVision.Common.min.js"></script>
	    <script type="text/javascript" src="//s3.amazonaws.com/Common-Production/dataTables/jquery.dataTables.min.js"></script>
	    <script type="text/javascript" src="//s3.amazonaws.com/Gadget-Spreadsheet/Spreadsheet.min.js"></script>

            <script type="text/javascript">
                var prefs = new gadgets.Prefs(),
		    spreadsheet = null;

		//Issue 1054 - Disable right-click.
		window.oncontextmenu = function() {
		    return false;
		};

		//Add Analytics code.
		var _gaq = _gaq || [];

		_gaq.push(['_setAccount', 'UA-41395348-9']);
		_gaq.push(['_trackPageview']);

		(function() {
		    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
		})();

                function initialize() {
                    var id = prefs.getString("id"),
			backgroundColor = prefs.getString("backgroundColor");

		    document.body.style.background = "transparent";

                    if (id != null && id != "") {
			gadgets.rpc.register("rscmd_play_" + id, play);
			gadgets.rpc.register("rscmd_pause_" + id, pause);
			gadgets.rpc.register("rscmd_stop_" + id, stop);
                    }

		    if (backgroundColor != null && backgroundColor != "") {
			document.body.style.background = backgroundColor;
		    }

		    google.setOnLoadCallback(function() {
			spreadsheet = new RiseVision.Spreadsheet();

			gadgets.rpc.register("rsparam_set_" + id, spreadsheet.getAdditionalParams);
			gadgets.rpc.register("rscmd_getSpreadsheetData", function(url) {
			    spreadsheet.getData.call(spreadsheet, url);
			});
			gadgets.rpc.call("", "rsparam_get", null, id, "additionalParams");
		    });
                }

		function play() {
		    spreadsheet.play();
		}

		function pause() {
		    spreadsheet.pause();
		}

		function stop() {
		    spreadsheet.pause();
		}

		function readyEvent() {
                    gadgets.rpc.call('', 'rsevent_ready', null, prefs.getString("id"), true, true, true, true, true);
                }

                function doneEvent() {
                    gadgets.rpc.call('', 'rsevent_done', null, prefs.getString("id"));
                }

                gadgets.util.registerOnLoadHandler(initialize);
            </script>
	]]>
    </Content>
</Module>
