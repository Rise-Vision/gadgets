<?xml version="1.0" encoding="UTF-8"?>
<Module>
    <ModulePrefs title="Rise Single Image Gadget" height="400" title_url="http://www.risevision.com/help/gadgets/gadget-help-files/rise-vision-single-image/">
	<!-- "rpc" feature is necessary for communicating with Viewer -->
	<Require feature="rpc" />
	<!-- "rise-api" feature with "reports_ready" parameter tells Rise Gadget Server that Rise Background Gadget supports sending "ready" event -->
	<Optional feature="rise-api">
	    <Param name="reports_ready" />
	</Optional>
    </ModulePrefs>
    <UserPref name="id" display_name="ID" datatype="hidden" />
    <UserPref name="url" display_name="URL" datatype="string" default_value="" required="true" />
    <UserPref name="backgroundColor" display_name="Background Color" datatype="string" />
    <UserPref name="rsW" display_name="Container Width" datatype="hidden" />
    <UserPref name="rsH" display_name="Container Height" datatype="hidden" />	
    <Content type="html">
	<![CDATA[
	<style type="text/css">
	    body {
		background-color: transparent;
		
		/* user can't select text on a touchscreen */
		user-select: none;
		-moz-user-select: none;
		-webkit-user-select: none;
		-khtml-user-select: none; 
	    }
	    
	    /* The following CSS implements vertical and horizontal center alignment. */
	    #cnt {
		width: __UP_rsW__; 
		height: __UP_rsH__;
		position: absolute;
		top: 50%;
		left: 0;
	    }
	    
	    #image {
		display: block;
		margin: auto;
	    }
	</style>		

	<script type="text/javascript" src="http://risegadgets.googlecode.com/svn/trunk/common/RiseGadgets.js"></script>
	<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js"></script>
	<script type="text/javascript" src="http://www.risedisplaycreative.com/case-vi/jquery.idle-timer.js"></script>
	<script type="text/javascript">
	    var prefs = new gadgets.Prefs();
		    
	    //Initialize the gadget.		
	    function initialize() {
		var id = prefs.getString("id");		
		var backgroundColor = prefs.getString("backgroundColor");
		var image = document.getElementById("image");

		gadgets.rpc.register("rscmd_addImageMap", addImageMap);
		gadgets.rpc.register("rscmd_setTimer", setTimer);
		gadgets.rpc.register("rscmd_destroyTimer", destroyTimer);
		
		if (backgroundColor != "") {
		    document.body.style.background = backgroundColor;
		}
		
		var settings = {
		    url: prefs.getString("url"),
		    rsW: prefs.getInt("rsW"),
		    rsH: prefs.getInt("rsH"),
		    callback: function(newWidth, newHeight) {                                                
			if (newWidth && newHeight) {
			    image.style.width = newWidth;
			    image.style.height = newHeight;						
			    document.getElementById("cnt").style.marginTop = -(newHeight / 2) + "px";	//Vertical alignment.
			}                                                 

			image.setAttribute("src", this.url);
			
			//Notify the Presentation that the image was clicked.
			image.onclick = function() { gadgets.rpc.call("", "onClick", null); }
		    },
		    onerror: function(image) {
			//Do nothing.
		    }
		};

		scaleToFit(settings);				
	    }
	    
	    //Creates an HTML image map from JSON.
	    function addImageMap(map) {
		var image = document.getElementById("image");
		var imageMap = document.createElement("map");
		
		if (map.name) {
		    image.useMap = "#" + map.name;
		    imageMap.setAttribute("name", map.name);
		}
		
		if (map.areas) {
		    for (var i = 0; i < map.areas.length; i++) {
			var area = document.createElement("area");
			
			if (map.areas[i].shape) {			    			    
			    area.setAttribute("shape", map.areas[i].shape);			    			    
			}
			
			if (map.areas[i].coords) {			    			    
			    area.setAttribute("coords", map.areas[i].coords);			    			    
			}			

			if (map.areas[i].href) {			    			    
			    area.setAttribute("href", map.areas[i].href);
			}
			else {
			    area.setAttribute("href", "javascript:onImageClicked('" + map.areas[i].title + "');");
			}
			
			if (map.areas[i].title) {			    			    
			    area.setAttribute("title", map.areas[i].title);			    			    
			}
			
			if (map.areas[i].alt) {			    			    
			    area.setAttribute("alt", map.areas[i].alt);			    			    
			}
			
			imageMap.appendChild(area);
		    }
		}
		
		document.body.appendChild(imageMap);
	    }
	    
	    function onImageClicked(tab) {
		gadgets.rpc.call("", "onImageClicked", null, tab);
	    }
	    
	    //Set a timer that will expire if there is no user interaction.
	    function setTimer(interval) {
                $.idleTimer(interval);
		$(document).bind("idle.idleTimer", function() {
		    $.idleTimer("destroy");
		    //Notify the Presentation that the timer has expired.
		    gadgets.rpc.call("", "timerExpired", null, prefs.getString("id"));
		});
            }
	    
	    function destroyTimer() {
		$.idleTimer("destroy");
	    }
	    
	    //Send "READY" event to the Viewer.
	    function readyEvent() {
		gadgets.rpc.call('', 'rsevent_ready', null, prefs.getString("id"), true, true, true, true, true);
	    }

	    //Send "DONE" event to the Viewer.
	    function doneEvent() {
		gadgets.rpc.call('', 'rsevent_done', null, prefs.getString("id"));
	    }
																															    
	    gadgets.util.registerOnLoadHandler(initialize);
	</script>

	<div id="cnt">
	    <img id="image" src="" onload="readyEvent();">
	</div>]]>
    </Content>
</Module>